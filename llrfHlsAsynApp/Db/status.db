
record(mbbi, "$(DEVICE):PFBST")
{
    field(DESC, "Status of Phase Feedback")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) p_feedback_st")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "Disabled")
    field(ONST, "Paused")
    field(TWST, "Feedforward")
    field(THST, "Enable")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MINOR")
    field(TWSV, "MINOR")
    field(THSV, "NO_ALARM")
}

record(mbbi, "$(DEVICE):AFBST")
{
    field(DESC, "Status of Ampl Feedback")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) a_feedback_st")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "Disabled")
    field(ONST, "Paused")
    field(TWST, "Feedforward")
    field(THST, "Enable")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MINOR")
    field(TWSV, "MINOR")
    field(THSV, "NO_ALARM")
}

record(longin, "$(DEVICE):LOOPCNT")
{
    field(DESC, "Formware Loop Counter")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) counter")
    field(SCAN, "I/O Intr")
}

record(longin, "$(DEVICE):DROPCNT")
{
    field(DESC, "Stream Drop Counter")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) drop_counter")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):PALPHA")
{
    field(DESC, "Phase Alpha vector")
    field(DTYP, "asynFloat64ArrayIn")
    field(INP,  "@asyn($(PORT),0) p_alpha")
    field(SCAN, "I/O Intr")
    field(FTVL, "DOUBLE")
    field(NELM, "$(NELM_ALPHA)")
}

record(waveform, "$(DEVICE):AALPHA")
{
    field(DESC, "Amplitude Alpha vector")
    field(DTYP, "asynFloat64ArrayIn")
    field(INP,  "@asyn($(PORT),0) a_alpha")
    field(SCAN, "I/O Intr")
    field(FTVL, "DOUBLE")
    field(NELM, "$(NELM_ALPHA)")
}

#
#  Non-timeslot aware Jitter PVs
#

record(ai, "$(DEVICE):PACT_JITTNT")
{
    field(DESC, "PACT Jitter for timeslot NT")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),0) phase_jitter_nt")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
    field(EGU,  "degree")
}

record(ai, "$(DEVICE):AACT_JITTNT")
{
    field(DESC, "AACT Jitter for timeslot NT")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),0) ampl_jitter_nt")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
    field(EGU,  "kV")
}


record(ai, "$(DEVICE):BVOLT_JITTNT")
{
    field(DESC, "Peak Beam Voltage Jitter for timeslot NT")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),0) bv_jitter_nt")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
    field(EGU,  "kV")
}

#
#  Non-timeslot aware average PVs
#

record(ai, "$(DEVICE):PACT_AVGNT")
{
    field(DESC, "PACT Avg for timeslot NT")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),0) phase_mean_nt")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
    field(EGU,  "degree")

}

record(ai, "$(DEVICE):AACT_AVGNT")
{
    field(DESC, "AACT Avg for timeslot NT")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),0) ampl_mean_nt")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
    field(EGU,  "kV")
}


record(ai, "$(DEVICE):BVOLT_AVGNT")
{
    field(DESC, "Peak Beam Voltage Avg for timeslot NT")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),0) bv_mean_nt")
    field(SCAN, "I/O Intr")
    field(PREC, "3")
    field(EGU,  "kV")
}

